// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataAccess.Migrations
{
    [DbContext(typeof(WebApiDBContext))]
    partial class WebApiDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Entities.Concrete.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = new Guid("632b7eb3-4fc3-4e4a-9c84-c772636d4958"),
                            Company = "Turkcell",
                            FirstName = "Mehmet",
                            LastName = "Sağlam"
                        },
                        new
                        {
                            ContactId = new Guid("1f3a7bab-e51f-4198-a0a0-4a1632e90d67"),
                            Company = "Vodafone",
                            FirstName = "Ahmet",
                            LastName = "Atay"
                        },
                        new
                        {
                            ContactId = new Guid("9c7feca6-d91a-485e-ac99-4e7c2b9c7277"),
                            Company = "Turkcell",
                            FirstName = "Hande",
                            LastName = "Güneş"
                        },
                        new
                        {
                            ContactId = new Guid("7e74cf3c-c47c-46c6-8372-2f97eed167ba"),
                            Company = "TurkTelekom",
                            FirstName = "Leyla",
                            LastName = "Güzel"
                        },
                        new
                        {
                            ContactId = new Guid("957dcbf5-e531-4ac0-924d-5ce85ca1545a"),
                            Company = "Turkcell",
                            FirstName = "Arif",
                            LastName = "Dertsiz"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ContactInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("InfoType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae854b10-5327-452a-aec1-bcc13d4e5796"),
                            ContactId = new Guid("632b7eb3-4fc3-4e4a-9c84-c772636d4958"),
                            Description = "İstanbul",
                            InfoType = "Location"
                        },
                        new
                        {
                            Id = new Guid("b310d6cd-2e42-4755-9cb5-1e6a726b81f1"),
                            ContactId = new Guid("632b7eb3-4fc3-4e4a-9c84-c772636d4958"),
                            Description = "090555445566",
                            InfoType = "Phone"
                        },
                        new
                        {
                            Id = new Guid("a3d84f56-15bc-45a5-85fe-7335bcfefd51"),
                            ContactId = new Guid("632b7eb3-4fc3-4e4a-9c84-c772636d4958"),
                            Description = "mehmet.saglam@turkcell.com",
                            InfoType = "Email"
                        },
                        new
                        {
                            Id = new Guid("617c4f00-20fb-47e8-bc5a-a537c191134d"),
                            ContactId = new Guid("1f3a7bab-e51f-4198-a0a0-4a1632e90d67"),
                            Description = "Ankara",
                            InfoType = "Location"
                        },
                        new
                        {
                            Id = new Guid("30f8a76a-54a6-4194-af0e-573245429a85"),
                            ContactId = new Guid("1f3a7bab-e51f-4198-a0a0-4a1632e90d67"),
                            Description = "905449998877",
                            InfoType = "Phone"
                        },
                        new
                        {
                            Id = new Guid("2ba68125-ff2a-412e-bc07-ff3910aa5c42"),
                            ContactId = new Guid("1f3a7bab-e51f-4198-a0a0-4a1632e90d67"),
                            Description = "ahmet.atay@vodafone.com",
                            InfoType = "Email"
                        },
                        new
                        {
                            Id = new Guid("dc0aaa1b-a795-435c-b40c-f72b1a86396e"),
                            ContactId = new Guid("9c7feca6-d91a-485e-ac99-4e7c2b9c7277"),
                            Description = "Ankara",
                            InfoType = "Location"
                        },
                        new
                        {
                            Id = new Guid("518a6d4e-9642-4b24-abfb-f6b2745413f4"),
                            ContactId = new Guid("9c7feca6-d91a-485e-ac99-4e7c2b9c7277"),
                            Description = "905438789977",
                            InfoType = "Phone"
                        },
                        new
                        {
                            Id = new Guid("c9661670-8403-4df6-a171-4dbdc68cccd5"),
                            ContactId = new Guid("7e74cf3c-c47c-46c6-8372-2f97eed167ba"),
                            Description = "İzmir",
                            InfoType = "Location"
                        },
                        new
                        {
                            Id = new Guid("ffe99b57-8c31-4f2a-9504-d7e7acc86d59"),
                            ContactId = new Guid("957dcbf5-e531-4ac0-924d-5ce85ca1545a"),
                            Description = "arif.dertsiz@turkcell.com",
                            InfoType = "Email"
                        },
                        new
                        {
                            Id = new Guid("5169a796-f9ce-4653-9395-b7bd5ab01703"),
                            ContactId = new Guid("957dcbf5-e531-4ac0-924d-5ce85ca1545a"),
                            Description = "İzmir",
                            InfoType = "Location"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Report", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("ReportId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Entities.Concrete.ReportDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfPhone")
                        .HasColumnType("integer");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportDetails");
                });

            modelBuilder.Entity("Entities.Concrete.ContactInfo", b =>
                {
                    b.HasOne("Entities.Concrete.Contact", "Contact")
                        .WithMany("ContactInfo")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.ReportDetail", b =>
                {
                    b.HasOne("Entities.Concrete.Report", "Report")
                        .WithMany("ReportDetail")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
